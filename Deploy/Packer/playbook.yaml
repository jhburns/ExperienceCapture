# - Name: Jonathan Hirokazu Burns
# - ID: 2288851
# - email: jburns@chapman.edu
# - Course: 353-01
# - Assignment: Submission #4
# - Purpose: Configures the Server

---
- hosts: all
  become: yes
  gather_facts: no

  vars:
    rexray_access_id: "{{ lookup('env','aws_rexray_access_id') }}"
    rexray_secret_key: "{{ lookup('env','aws_rexray_secret_key') }}"
    aws_region_name: "{{ lookup('env','aws_region_name') }}"

  tasks:
  # Needed because the Ubuntu AMI does not come with python2
  - name: symlink /usr/bin/python -> /usr/bin/python3
    raw: |
         if [ -f /usr/bin/python3 ] && [ ! -f /usr/bin/python ]; then
           ln --symbolic /usr/bin/python3 /usr/bin/python;
         fi
    become: true

  - name: Add 'fish' repository
    apt_repository:
      repo: ppa:fish-shell/release-3

  - name: Update cache before installing packages
    apt:
      update_cache: yes

  - name: Install required system packages for Docker
    apt:
      name: "{{ item }}"
    loop:
       - 'apt-transport-https=1.6.6ubuntu0.1'
       - 'ca-certificates=20180409'
       - 'curl=7.58.0-2ubuntu3.8'
       - 'software-properties-common=0.96.24.32.11'
       - 'rsync=3.1.2-2.1ubuntu1'
       - 'fish=3.0.2-1~bionic'

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu bionic stable

  - name: Update apt and install docker-ce
    apt:
      update_cache: yes
      name: docker-ce=5:19.03.5~3-0~ubuntu-bionic

  - name: Download and install docker-compose
    shell: curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    args:
      warn: no

  - name: Change file ownership, group and permissions
    file:
      path: /usr/local/bin/docker-compose
      mode: u=rwx,g=rx,o=rx

  - name: Add the user 'ec-debug' as part of the 'docker' group
    user:
      name: ec-debug
      comment: Default user for debugging in production.
      group: docker
      shell: /usr/bin/fish
      password_lock: yes

  - name: Download the REX-Ray plugin
    command: "docker plugin install rexray/ebs:0.11.4 \
               --grant-all-permissions \
              EBS_ACCESSKEY={{ rexray_access_id }} \
              EBS_SECRETKEY={{ rexray_secret_key }} \
              EBS_REGION={{ aws_region_name }}"

  - name: Open up tcp ports needed by server and cluster to function
    command:
      argv:
        - ufw
        - allow
        - 80,443,2377,7946/tcp

  - name: Open up udp ports needed by server and cluster to function
    command:
      argv:
        - ufw
        - allow
        - 7946,4789/udp

  - name: Copy Server files over
    synchronize:
      src: /deploy/Server/
      dest: /srv
      rsync_opts:
        - "--chmod=F444"

  - name: Set authorized key
    authorized_key:
      user: ec-debug
      state: present
      key: "{{ lookup('file', './id_rsa.pub') }}"

  - name: Start Docker Swarm
    command:
      argv:
        - docker
        - swarm
        - init

  - name: Rebuild Docker images for production
    command:
      argv:
        - docker-compose
        - -f
        - docker-compose.yaml
        - -f
        - docker-compose.production.yaml
        - build
      chdir: /srv/

  - name: Prune non-production Docker images so the AMI uses less space
    command:
      argv:
        - docker
        - system
        - prune
        - --all
        - --force
        - --filter
        - "label!=xyz.expcap.isproduction"

  - name: Create Docker Swarm services
    command:
      argv:
        - docker
        - stack
        - deploy
        - -c
        - docker-compose.yaml
        - -c
        - docker-compose.production.yaml
        - rp
      chdir: /srv/