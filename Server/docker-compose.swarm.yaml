---
networks:
  ec-network:
    attachable: true
    driver: overlay

services:
  api:
    deploy:
      replicas: 3
      restart_policy:
        condition: any
      update_config:
        delay: 30s
        parallelism: 0
    healthcheck:
      interval: 1m30s
      retries: 3
      test: wget --quiet --tries=1 -O /dev/null http://localhost/health/ || exit 1
      timeout: 10s
    image: 127.0.0.1:5000/ec-api
    volumes:
      - ./API/source/appsettings.production.json:/app/appsettings.json

  bu:
    deploy:
      labels:
        - "swarm.cronjob.enable=true"
        # Every day at 2AM PST
        # Or 10AM UTC
        - "swarm.cronjob.schedule=0 10 * * *"
        - "swarm.cronjob.skip-running=true"
      mode: global
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/ec-bu

  db:
    deploy:
      restart_policy:
        condition: any
      update_config:
        delay: 30s
        parallelism: 0
    healthcheck:
      interval: 1m30s
      retries: 3
      test: mongo --quiet --eval "db.adminCommand('ping')"
      timeout: 10s

  os:
    healthcheck:
      interval: 1m30s
      retries: 3
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      timeout: 10s

  rp:
    # Leaving this here in case of a rate limit
    command: ["--agree"]  # , "-ca", "https://acme-staging-v02.api.letsencrypt.org/directory"]
    deploy:
      replicas: 3
      restart_policy:
        condition: any
      update_config:
        delay: 30s
        parallelism: 0
    env_file:
      - .env
      # Warning: Do not try to add a healthcheck here because as it will stop Let's Encrypt from working
    environment:
      - CADDYPATH=/etc/caddycerts
      - HOME=/etc/caddycerts
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddy/production.Caddyfile:/etc/Caddyfile
      - ec-rp-volume:/etc/caddycerts

  web:
    build:
      context: ./WebUI
      dockerfile: production.Dockerfile
    command: ["caddy"]
    deploy:
      replicas: 2
      restart_policy:
        condition: any
      # Web going down isn't much of an issue, so little replicas
      update_config:
        delay: 30s
        parallelism: 0
    healthcheck:
      interval: 1m30s
      retries: 3
      test: wget --quiet --tries=1 -O /dev/null http://localhost:2015/ || exit 1
      timeout: 10s
    image: 127.0.0.1:5000/ec-web
    ports:
      - "2015:2015"

version: '3.5'
