---
version: '3.5'

services:
  api:
    build:
      context: ./API
    command: ["sh", "-c", "/wait && dotnet API.dll"]
    hostname: api
    ports:
      - "4321:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # May need to be changed cross platform
    depends_on:
      - db
      - os
    environment:
      WAIT_HOSTS: db:27017, os:9000
    env_file:
      - .env
    networks:
      - ec-network

  db:
    image: mongo:4.2.2-bionic
    hostname: db
    ports:
      - "27017:27017"
    volumes:
      - ec-db-volume:/data/db
    networks:
      - ec-network

  rp:
    image: abiosoft/caddy:1.0.3
    command: ["--conf", "/etc/Caddyfile"]
    hostname: web
    depends_on:
      - api
      - web
    networks:
      - ec-network

  web:
    build:
      context: ./WebUI
      args:  # Make sure to change the following arg
        REACT_APP_GOOGLE_CLIENT_ID: 555477545658-co1pgbl0uh99rp8tbo2q62t2ch8vlb1h.apps.googleusercontent.com
    hostname: web
    networks:
      - ec-network

  os:
    image: minio/minio:RELEASE.2020-01-03T19-12-21Z
    command: server /data
    hostname: os
    ports:
      - "9009:9000"
    volumes:
      - ec-os-volume:/data
    environment:  # Using defaults, do not run in insecure environment
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    networks:
      - ec-network

  # Note: this service doesn't wait for the db to become active
  bu:
    build:
      context: ./Backupper
    image: 127.0.0.1:5000/infra-backupper
    volumes:
      - ec-db-volume:/app/backup
    depends_on:
      - db
    environment:
      aws_deploy_target: staging
    env_file:
      - .env
    networks:
      - ec-network

networks:
  ec-network: {}
